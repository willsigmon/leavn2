1.  Choose an earthâ€‘tone palette that still meets WCAGâ€¯2.2 contrast

Token	LightÂ mode (HSL)	DarkÂ mode (HSL)	Notes
--background	30 40%Â 96%	25 12%Â 8%	warm parchment â†” deep espresso
--foreground	25 15%Â 12%	35 30%Â 90%	dark walnut â†” vanillaâ€‘cream text
--primary	32 70%Â 38%	32 65%Â 48%	rich burntâ€‘sienna CTA
--primaryâ€‘foreground	32 30%Â 96%	35 35%Â 93%	maintainsâ€¯â‰¥â€¯4.5:1 contrastÂ AA ï¿¼
--secondary	112 24%Â 38%	112 20%Â 55%	muted olive accents
--secondaryâ€‘foreground	30 25%Â 96%	35 30%Â 92%	
--accent	42 35%Â 55%	42 30%Â 62%	soft ochre highlights
--borderÂ /&nbsp;--input	30 15%Â 85%	25 8%Â 25%	
--muted	45 20%Â 92%	35 12%Â 14%	for cards, popovers
--mutedâ€‘foreground	32 8%Â 35%	38 8%Â 60%	
(optional) --chartâ€‘1â€¦5	pick harmonious rust/olive/tan/umber/teal swatches that clear â‰¥â€¯3:1 for thick lines		

These hues stay in the brownâ€‘oliveâ€‘ochre family and clear the 3â€¯:â€¯1 nonâ€‘text and 4.5â€¯:â€¯1 text requirements from WCAGâ€¯2.2Â AA. ï¿¼ ï¿¼

â¸»

2.  Update your single sourceâ€‘ofâ€‘truth

Your project already maps Tailwind utilities to CSS variables (tailwind.config.ts) and switches themes with the .dark class (see index.css). That means you only need to swap the valuesâ€”not utility classesâ€”in two places.

/* client/src/index.css  âžœ  replace the :root + .dark blocks */
:root {
  --background: 30 40% 96%;
  --foreground: 25 15% 12%;
  --muted: 45 20% 92%;
  --muted-foreground: 32 8% 35%;
  --popover: var(--background);
  --popover-foreground: var(--foreground);
  --card: var(--background);
  --card-foreground: var(--foreground);
  --border: 30 15% 85%;
  --input: var(--border);

  --primary: 32 70% 38%;
  --primary-foreground: 32 30% 96%;
  --secondary: 112 24% 38%;
  --secondary-foreground: 30 25% 96%;

  --accent: 42 35% 55%;
  --accent-foreground: 30 25% 96%;

  --destructive: 0 65% 35%;
  --destructive-foreground: 0 0% 98%;

  /* optional dataâ€‘viz */
  --chart-1: 32 70% 38%;
  --chart-2: 112 24% 38%;
  --chart-3: 42 35% 55%;
  --chart-4: 20 20% 50%;
  --chart-5: 190 20% 40%;

  --ring: var(--border);
  --radius: 0.5rem;
}

.dark {
  --background: 25 12% 8%;
  --foreground: 35 30% 90%;
  --muted: 35 12% 14%;
  --muted-foreground: 38 8% 60%;
  --popover: var(--background);
  --popover-foreground: var(--foreground);
  --card: var(--background);
  --card-foreground: var(--foreground);
  --border: 25 8% 25%;
  --input: var(--border);

  --primary: 32 65% 48%;
  --primary-foreground: 35 35% 93%;
  --secondary: 112 20% 55%;
  --secondary-foreground: 35 30% 92%;

  --accent: 42 30% 62%;
  --accent-foreground: 35 30% 92%;

  --destructive: 0 70% 50%;
  --destructive-foreground: 0 0% 98%;

  --chart-1: 32 65% 48%;
  --chart-2: 112 20% 55%;
  --chart-3: 42 30% 62%;
  --chart-4: 20 15% 60%;
  --chart-5: 190 15% 50%;

  --ring: var(--border);
}

Tip: your tailwind.config.ts already consumes these vars, so buttons using bg-primary / dark:bg-primary will automatically inherit the new hues.

â¸»

3. Add (or confirm) the theme toggle helper

// client/src/theme.ts
export function toggleTheme(): void {
  const root = document.documentElement;
  const dark = root.classList.toggle('dark');
  localStorage.setItem('theme', dark ? 'dark' : 'light');
}

export function initTheme(): void {
  const saved = localStorage.getItem('theme');
  if (saved === 'dark' || (!saved && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    document.documentElement.classList.add('dark');
  }
}

Call initTheme() on app start, wire toggleTheme() to your theme switch.

Tailwindâ€™s recommended approach is to flip a single dark class on <html> like this. ï¿¼

â¸»

4. Oneâ€‘shot prompt you can paste into Replitâ€™s AI Agent

# ðŸ”§Â Task: Earthâ€‘tone global themeÂ (refactor)
1. Open **client/src/index.css**
2. Replace the entire `:root` and `.dark` variable blocks with the values below (earthâ€‘tone palette, WCAGâ€‘compliant):
   ---PALETTE-BEGIN---
   --background: 30 40% 96%;
   --foreground: 25 15% 12%;
   ...
   --radius: 0.5rem;
   ---PALETTE-END---

3. Verify there are **no hardâ€‘coded colors** left in the project that conflict (`207 90% 54%`, `#2563eb`, etc.).  Use ripgrep:
   ```bash
   rg --fixed-strings "207 90% 54%" -l | xargs sed -i '' -e 's/207 90% 54%/32 70% 38%/g'

	4.	Ensure tailwind.config.ts continues to map colors via hsl(var(--token)).  No changes needed unless you want extra tokens.
	5.	Add client/src/theme.ts containing the toggle/init helpers (below).  Import initTheme() in your root main.tsx and call it before the app renders; wire toggleTheme() to the UI switch.
	6.	Reâ€‘run npm run dev and visually inspect both modes.  Use a contrast checker browser extension to confirm every text/background pair clears 4.5â€¯:â€¯1.  If any fail, tweak just those variable lightness values until they pass.

Copyâ€¯â†’â€¯paste that block into the Replit agent chat, hit enter, and your entire codebase will harmonize around the new earthâ€‘tone schemeâ€”automatically respecting darkâ€¯&â€¯light mode everywhere. ðŸŽ¨ 