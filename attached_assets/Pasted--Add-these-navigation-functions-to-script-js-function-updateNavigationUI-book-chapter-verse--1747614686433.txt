// Add these navigation functions to script.js

function updateNavigationUI(book, chapter, verse) {
  // Update form inputs to match current state
  const bookSelect = document.getElementById('book-select');
  const chapterInput = document.getElementById('chapter-input');
  const verseInput = document.getElementById('verse-input');
  
  if (bookSelect) bookSelect.value = book;
  if (chapterInput) chapterInput.value = chapter;
  if (verseInput) verseInput.value = verse;
}

function navigateToVerse(book, chapter, verse) {
  // Validate and sanitize inputs
  const bookKey = book.toLowerCase();
  chapter = parseInt(chapter);
  verse = parseInt(verse);
  
  // Update reader state
  reader.book = bookKey;
  reader.chapter = chapter;
  reader.verse = verse;
  reader.saveState();
  
  // Display the verse
  displayVerse(bookKey, chapter, verse);
}

function nextVerse() {
  const book = reader.book;
  const chapter = reader.chapter;
  const verse = reader.verse;
  
  const bookData = books[book];
  if (!bookData) return;
  
  const chapterData = bookData.chapters[chapter-1];
  if (!chapterData) return;
  
  if (verse < chapterData.length) {
    // Move to next verse in current chapter
    navigateToVerse(book, chapter, verse + 1);
  } else if (chapter < bookData.chapters.length) {
    // Move to first verse of next chapter
    navigateToVerse(book, chapter + 1, 1);
  } else {
    // Move to first verse of first chapter of next book
    const bookKeys = Object.keys(books);
    const currentIndex = bookKeys.indexOf(book);
    
    if (currentIndex < bookKeys.length - 1) {
      navigateToVerse(bookKeys[currentIndex + 1], 1, 1);
    }
  }
}

function prevVerse() {
  const book = reader.book;
  const chapter = reader.chapter;
  const verse = reader.verse;
  
  if (verse > 1) {
    // Move to previous verse in current chapter
    navigateToVerse(book, chapter, verse - 1);
  } else if (chapter > 1) {
    // Move to last verse of previous chapter
    const prevChapterVerses = books[book].chapters[chapter-2].length;
    navigateToVerse(book, chapter - 1, prevChapterVerses);
  } else {
    // Move to last verse of last chapter of previous book
    const bookKeys = Object.keys(books);
    const currentIndex = bookKeys.indexOf(book);
    
    if (currentIndex > 0) {
      const prevBook = bookKeys[currentIndex - 1];
      const lastChapter = books[prevBook].chapters.length;
      const lastVerse = books[prevBook].chapters[lastChapter-1].length;
      navigateToVerse(prevBook, lastChapter, lastVerse);
    }
  }
}