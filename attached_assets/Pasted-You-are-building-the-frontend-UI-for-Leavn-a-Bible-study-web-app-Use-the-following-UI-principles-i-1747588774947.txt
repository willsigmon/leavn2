You are building the frontend UI for Leavn, a Bible study web app. Use the following UI principles inspired by the top 10 UI examples of 2025 to create a modern, emotionally resonant, user-centric interface:

🏗️ Overall Design Goals:
- Design must be responsive (mobile-first but clean on desktop).
- Color palette should reflect a warm, earth-toned theme—calming but trustworthy. Think spiritual, not sterile.
- UI should balance emotional connection with simplicity. Focus on readability, whitespace, and clarity.
- Incorporate subtle microinteractions (hover effects, button feedback, loading states).
- Typography should support long-form reading (avoid ultra-light fonts, prioritize line spacing and font size control).

📖 Bible Reader Layout:
- Use a two-column layout: ⅔ for the main reading pane, ⅓ for the contextual sidebar.
- Sidebar dynamically updates based on selected verse(s) and offers maps, theological insights, time period, themes, and people.
- Use smooth transitions when switching between chapters/verses.
- Hold-Shift to select multiple verses should batch update the sidebar.
- Add verse-level feedback interactions (like highlighting, notes, reactions).

🔍 Navigation:
- Sidebar should allow exploration by book, chapter, theme, place, or person (RAG-based).
- Include a persistent global search bar that autocompletes passages, people, places, themes.

🎨 Inspired UI Features:
- **Spotify**: Personalized verse suggestions based on prior reading or favorited verses (bottom-of-page carousel).
- **Netflix**: Dynamic recommendation engine in homepage layout.
- **Discord**: Use category-based discoverability for different reading plans or community discussions.
- **Blinkist**: Implement descriptive icons for themes (e.g., 'Grace', 'Justice', 'Covenant').
- **Bear**: Include onboarding animation or explainer video that walks users through app features in a friendly tone.
- **Monzo**: Real-time verse tagging, map integration, and reading streak visualization.

🧩 Functional Requirements:
- Cache and locally index both KJV and WEB versions of the Bible for fast verse lookup.
- Use RAG system to auto-tag every verse by: person, place, theme, theological lens, time period.
- Allow filters for each of the above in the sidebar + homepage.
- On hover or tap, show micro popups for verse context (cross-references, commentary snippets).

🎯 Final UX Principles:
- Prioritize clarity > aesthetics > cleverness.
- Use feedback loops for every action (e.g., verse selection, tag filter, share).
- Encourage serendipitous discovery with contextual content bubbles (e.g., “Did you know…?”).

Output a modern, accessible, emotionally engaging UI that brings scripture to life—visually and contextually. Use modern CSS and Tailwind where appropriate.
